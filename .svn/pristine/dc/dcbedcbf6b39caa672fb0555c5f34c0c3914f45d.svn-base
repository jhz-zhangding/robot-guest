package com.efrobot.guest.speech;

import android.content.Intent;
import android.util.Log;

import com.efrobot.guest.service.UltrasonicService;
import com.efrobot.guest.utils.ActivityManager;
import com.efrobot.guest.utils.StateUtils;
import com.efrobot.guest.utils.WheelActionUtils;
import com.efrobot.library.mvp.utils.L;
import com.efrobot.speechsdk.SpeechManager;
import com.efrobot.speechsdk.SpeechSdkProvider;

/**
 * Created by lhy on 2017/2/14
 */
public class CusProvider extends SpeechSdkProvider {
    private static final String TAG = "CusProvider";
    public static final String AUTHORITY = "com.example.aidlclient1.provider";

    private Intent mServiceIntent;

    private boolean isVoiceAwak = false;

    private static int num = 0;

    @Override
    public void onReceiveMessage(String code, String speechContent) {
        try {
            Log.i(TAG, "service receive=" + code + " speechContent=" + speechContent + " Thread=" + Thread.currentThread().getName());

            if (code.equals("1000")) {
                Log.i(TAG, "enter welcome");
                if (!StateUtils.getInstance().isHadGuest() && !UltrasonicService.IsRunning) {
                    StateUtils.getInstance().setmTtsEnd(false); //开始迎宾设置语音结束默认
                    SpeechManager.getInstance().closeSpeechDiscern(getContext());
                    SpeechManager.getInstance().removeSpeechState(getContext(), 11);
//                    GuestsApplication.from(getContext()).startMainActiviyt(0);
                    Log.i(TAG, "initData");
                    //禁止轮子运动
//                    WheelActionUtils.getInstance(getContext()).closeWheelAction();
                    //开启迎宾
                    mServiceIntent = new Intent(getContext(), UltrasonicService.class);
                    getContext().getApplicationContext().startService(mServiceIntent);
                    StateUtils.getInstance().setHadGuest(true);
                    isVoiceAwak = true;
                    num = 0;
                }
                //开启超声波
            } else if (code.equals("1001")) {
                SpeechManager.getInstance().openSpeechDiscern(getContext());
                ActivityManager.getInstance().finishActivity();
                StateUtils.getInstance().setHadGuest(false);
                if (null != mServiceIntent) {
                    getContext().getApplicationContext().stopService(mServiceIntent);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean isIntoVoice = false;

    @Override
    public void TTSEnd() {
        super.TTSEnd();
        L.e(TAG, "TTSEnd");
        if (isVoiceAwak) { //语音唤醒 的结束
            num++;
            L.i(TAG, "num = " + num);
            if (num >= 2) {
                StateUtils.getInstance().setVoiceEnd(true); //欢迎语结束
                L.e(TAG, "isVoiceAwak = " + isVoiceAwak);
                isIntoVoice = true;
            } else {
                if (isIntoVoice) {
                    StateUtils.getInstance().setVoiceEnd(true);
                } else
                    StateUtils.getInstance().setVoiceEnd(false);
            }
        } else { //手动打开的
            if(UltrasonicService.isWelcomeTTsStart) {
                //欢迎与说完
                UltrasonicService.isWelcomeTTsStart = false;
                StateUtils.getInstance().setVoiceEnd(true);
            } else {
                StateUtils.getInstance().setVoiceEnd(false);
            }
        }
    }

}
