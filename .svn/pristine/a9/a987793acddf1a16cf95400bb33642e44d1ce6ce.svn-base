package com.efrobot.guests;

import android.app.Application;
import android.content.Context;
import android.content.Intent;
import android.util.Log;

import com.efrobot.guests.bean.CustomActionBean;
import com.efrobot.guests.bean.UlPlaceBean;
import com.efrobot.guests.dao.ActionBaseDao;
import com.efrobot.guests.dao.ExchangeModeDao;
import com.efrobot.guests.dao.RemarkDao;
import com.efrobot.guests.dao.SettingDao;
import com.efrobot.guests.dao.UltrasonicDao;
import com.efrobot.guests.db.DbHelper;
import com.efrobot.guests.setting.SettingActivity;
import com.efrobot.library.mvp.utils.L;
import com.efrobot.speechsdk.SpeechManager;

import java.util.ArrayList;

/**
 * Created by Administrator on 2017/3/2.
 */
public class GuestsApplication extends Application {
    private DbHelper mDbHelper;

    private String TAG = getClass().getSimpleName();
    private String PACKGE_NAME = "com.efrobot.guests:";


    @Override
    public void onCreate() {
        super.onCreate();
        L.i(TAG, "into application");
        SpeechManager.getInstance().registerSpeechSDK(this, mISpeech);

        ArrayList<CustomActionBean> listBean = new ArrayList<CustomActionBean>();
        CustomActionBean bean = new CustomActionBean();
        bean.setFace("");
        bean.setHead("");
        bean.setWing("");
        // 进入常亮
        int lightType = 1;
        bean.setLight(lightType);
        listBean.add(bean);
        getActionDao().insertAction(listBean);

        ArrayList<CustomActionBean> listBean1 = new ArrayList<CustomActionBean>();
        CustomActionBean bean1 = new CustomActionBean();
        bean1.setFace("");
        bean1.setHead("");
        bean1.setWing("");
        // 退出关闭
        int lightTypeEnd = 0;
        bean1.setLight(lightTypeEnd);
        listBean1.add(bean1);
        getActionDao().insertEndAction(listBean1);

//        //设置超声波
//        UlPlaceBean ulPlaceBeen = new UlPlaceBean();
//        ulPlaceBeen.setUltrasonicId(0);
//        ulPlaceBeen.setIsOpenValue(1);
//        ulPlaceBeen.setDistanceValue("100");
//        getUltrasonicDao().insert(ulPlaceBeen);
//
//        UlPlaceBean ulPlaceBeen1 = new UlPlaceBean();
//        ulPlaceBeen1.setUltrasonicId(4);
//        ulPlaceBeen1.setIsOpenValue(1);
//        ulPlaceBeen1.setDistanceValue("100");
//        getUltrasonicDao().insert(ulPlaceBeen);


    }

    public void startMainActiviyt(int type) {
        Intent intent = getPackageManager().getLaunchIntentForPackage("com.efrobot.guests");
        intent.putExtra("type", type);
        startActivity(intent);
    }


    public GuestsApplication getContext() {
        return this;
    }


    String data = "[\n" +
            "    {\n" +
            "        \"code\": \"1000\",\n" +
            "        \"ins\": \"开始迎宾\",\n" +
            "        \"packageName\": \"com.efrobot.guests\",\n" +
            "        \"reply\": \"好的\",\n" +
            "        \"type\": \"0\"\n" +
            "    },\n" +
            "    {\n" +
            "        \"code\": \"1001\",\n" +
            "        \"ins\": \"关闭迎宾\",\n" +
            "        \"packageName\": \"com.efrobot.guests\",\n" +
            "        \"reply\": \"好的\",\n" +
            "        \"type\": \"0\"\n" +
            "    }\n" +
            "]";


    public void setData() {
        try {
            SpeechManager.getInstance().setData(data);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    SpeechManager.ISpeech mISpeech = new SpeechManager.ISpeech() {

        @Override
        public void onRegisterSuccess() {

            setData();
            Log.i(TAG, PACKGE_NAME + " onRegisterSuccess");
        }

        @Override
        public void onRegisterFail() {
            Log.i(TAG, PACKGE_NAME + " onRegisterFail");

        }
    };

    /**
     * 初始化
     *
     * @param context Application
     * @return Application
     */
    public static GuestsApplication from(Context context) {
        if (context != null)
            return (GuestsApplication) context.getApplicationContext();
        else return null;
    }

    /**
     * 获取数据库操作类
     *
     * @return 数据库操作类
     */

    public synchronized DbHelper getDataBase() {
        if (mDbHelper == null)
            mDbHelper = new DbHelper(getApplicationContext());
        return mDbHelper;
    }

    RemarkDao mDataDao;

    public RemarkDao getRemarkDao() {
        if (mDataDao == null) {
            mDataDao = new RemarkDao(getDataBase());
        }
        return mDataDao;
    }


    SettingDao mSettingDao;

    public SettingDao getSettingDao() {
        if (mSettingDao == null) {
            mSettingDao = new SettingDao(getDataBase());
        }
        return mSettingDao;
    }


    UltrasonicDao ultrasonicDao;

    public UltrasonicDao getUltrasonicDao() {
        if (ultrasonicDao == null) {
            ultrasonicDao = new UltrasonicDao(getDataBase());
        }
        return ultrasonicDao;
    }

    ActionBaseDao actionBaseDao;

    public ActionBaseDao getActionDao() {
        if (actionBaseDao == null)
            actionBaseDao = new ActionBaseDao(getDataBase());
        return actionBaseDao;
    }

    ExchangeModeDao exchangeModeDao;

    public ExchangeModeDao getModeDao() {
        if (exchangeModeDao == null)
            exchangeModeDao = new ExchangeModeDao(getDataBase());
        return exchangeModeDao;
    }

}
